name: Build and deploy

on:
  push:
    branches:
      - main
      - delbestilling-status

jobs:
  build:
    name: Build app, docker image and  push docker image
    permissions:
      contents: "read"
      id-token: "write"
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Java 17
        uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - name: Cache gradle dependencies
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: ./gradlew clean build --info
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
      - name: Build and publish docker image
        uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: teamdigihot
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-dev:
    name: Deploy to dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais-dev.yaml,nais/alerts.yaml
          IMAGE: ${{ needs.build.outputs.image }}

  deploy-prod:
    name: Deploy to Production
    needs: [ build, deploy-dev ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/nais-prod.yaml,nais/alerts.yaml
          IMAGE: ${{ needs.build.outputs.image }}

  trivy-imagescan:
    name: Scan dockerimage with Trivy
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
      id-token: write
    steps:
      - uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: teamdigihot
      - name: Run Trivy vulnerability scanner on docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build.outputs.image }}
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
